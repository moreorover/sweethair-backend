# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  unit_testing:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npx prisma generate
    - run: npm run test:unit
    - name: Archive code coverage results for unit testing
      uses: actions/upload-artifact@v3
      with:
        name: jest-unit-coverage-report
        path: coverage/lcov-report/*
    - run: rm -r coverage
    - run: docker compose -f docker-compose.test.yml up -d --build
    - run: npx prisma db push
    - name: Archive code coverage results for integration testing
      uses: actions/upload-artifact@v3
      with:
        name: jest-integration-coverage-report
        path: coverage/lcov-report/*


  integration_testing:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npx prisma generate
    - run: docker compose -f docker-compose.test.yml up -d --build
    - run: npx prisma db push
    - run: jest -i --runTestsByPath ./tests/integration/**/*.ts
    - run: docker compose -f docker-compose.test.yml down
    - name: Archive code coverage results for integration testing
      uses: actions/upload-artifact@v3
      with:
        name: jest-integration-coverage-report
        path: coverage/lcov-report/*
